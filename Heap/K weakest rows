int countSoldier(vector<vector<int>> &matrix,int r){
    int start = 0, end = matrix[r].size()-1;
    while(start<=end){
        int mid = start+(end-start)/2;
        if(matrix[r][mid]==0){
            end = mid-1;
        }
        else{
            start = mid+1;
        }
    }
    return end+1;
}
vector<int> solve(vector<vector<int>> matrix, int k){
//CODE HERE 
priority_queue<pair<int,int>>maxHeap;// pair<soldiers,row>
for(int i=0;i<matrix.size();i++){
    int soldiers = countSoldier(matrix,i);
    maxHeap.push({soldiers,i});
    if(maxHeap.size()>k){
        maxHeap.pop();
    }
}
vector<int>ans;
while(!maxHeap.empty()){
    ans.push_back(maxHeap.top().second);
    maxHeap.pop();
}
reverse(ans.begin(),ans.end());
return ans;
}

time = O(nLogN) space = O(2*K)
