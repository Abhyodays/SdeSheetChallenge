Using two Queues

class MyStack {
public:
    queue<int>q;
    queue<int>aux;
    MyStack() {
        
    }
    
    void push(int x) {
        if(q.empty()){
            q.push(x);
            return ;
        }
        while(!q.empty()){
            aux.push(q.front());
            q.pop();
        }
        q.push(x);
        while(!aux.empty()){
            q.push(aux.front());
            aux.pop();
        }
    }
    
    int pop() {
        if(q.empty()) return -1;
        int top = q.front();
        q.pop();
        return top;
    }
    
    int top() {
        if(q.empty()) return -1;
        return q.front
    
    bool empty() {
        return q.empty();
    }
};

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Using Single Queues

class MyStack {
public:
    queue<int>q;
    int size;
    MyStack() {
        size = 0;
    }
    
    void push(int x) {
        q.push(x);
        for(int i= 0 ; i<size; i++){
            int temp = q.front();
            q.pop();
            q.push(temp);
        }
        size++;
        
    }
    
    int pop() {
        if(size==0) return -1;
        int temp = q.front();
        q.pop();
        size--;
        return temp;
    }
    
    int top() {
        return q.front();
    }
    
    bool empty() {
        return (size==0);
    }
};

