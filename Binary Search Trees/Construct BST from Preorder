class Solution {
public:
    TreeNode *insertNode(TreeNode *root, int target){
        if(root==NULL){
            TreeNode *newNode = new TreeNode(target);
            return newNode;
        }
        
        if(root->val > target){
            root->left = insertNode(root->left,target);
        }
        else{
            root->right = insertNode(root->right,target);
        }
        
        return root;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode *root = new TreeNode();
        if(preorder.size()==0) return root;
        root->val = preorder[0];
        for(int i=1;i<preorder.size();i++){
            root = insertNode(root,preorder[i]);
        }
        return root;
    }
};

Time = O(nlogn) Space = O(H)
