DFS Method:

class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        int level = 0;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int len = q.size();
            int last = level%2==0?0:INT_MAX;
            for(int i=0;i<len;i++){
                TreeNode* fNode = q.front();
                q.pop();
                if(level%2 == fNode->val %2) return false;
                if(level%2==0 && last >= fNode->val) return false;
                if(level %2==1 && last <= fNode->val) return false;
                if(fNode->left){
                    q.push(fNode->left);
                }
                if(fNode->right){
                    q.push(fNode->right);
                }
                last = fNode->val;
            }
            level++;
        }
        return true;
    }
};
Time = O(N) Space = O(h)
