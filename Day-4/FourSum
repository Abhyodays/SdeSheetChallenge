class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>ans;
        int n = nums.size();
        sort(nums.begin(),nums.end());
        for(int i = 0; i<n ; i++){
            for(int j = i+1; j<n; j++){
                long newTarget = (long)target-nums[i]-nums[j];
                int front = j+1, back = n-1; 
                
                while(front<back){
                    long  twoSum =(long) nums[front]+nums[back];
                    if(twoSum<newTarget) front++;
                    
                    else if(twoSum>newTarget) back--;
                    
                    else{
                        vector<int>quad ={nums[i],nums[j],nums[front],nums[back]};
                        ans.push_back(quad);
                        while(front<back && nums[front]==quad[2]) front++;
                        while(front<back && nums[back]==quad[3]) back--;
                        
                    }
                }
                while(j+1<n && nums[j+1]==nums[j])j++;
            }
            while(i+1<n && nums[i]==nums[i+1]) i++;
        }
        return ans;
    
    }
};
